/**
 * Jenkinsfile
 *
 * Jenkins Pipeline to provision bare metal slaves in beaker.
 */
properties([
  parameters([
    choiceParam(
      name: 'ARCH',
      choices: "x86_64\nppc64le\naarch64\ns390x",
      description: 'Architecture'
    )
  ])
])
node ('jenkins-slave') {
    ansiColor('xterm') {
        timestamps {
            def jslaveName = 'jenkins-slave-' + ${env.BUILD_NUMBER} + '-' + params.ARCH
            stage('Setup') {
                // TODO - set cinchpin configuration from parameters
                 dir('ci-pipeline') {
                    git 'https://github.com/jaypoulz/multiarch-ci-pipeline'
                    sh 'kinit -k jpoulin@REDHAT.COM'
                     
                    def configMap = readYaml(file: 'inventories/group_vars/all.yml')
                    configMap.jslave_name = jslaveName
                    configMap.jslave_label = jslaveName
 
                    writeYaml(file: 'inventories/group_vars/all.yml' data: configMap)
                }
            }
            
            stage('Provision') {
                dir('ci-pipeline') {
                    sh 'cinchpin up'
                }
            }

            stage('Archive') {
                // TODO archive slave name in a slave.properties file
                dir('ci-pipeline') {
                    archiveArtifacts artifacts: 'inventories/cinch.inventory', fingerprint: true
                    archiveArtifacts artifacts: 'resources/cinch.output', fingerprint: true
                    
                    Properties props = new Properties()
                    File propsFile = new File('slave.properties')
                    props.setProperty('name', jslaveName)
                    props.store(propsFile.newWriter(), null)
                    archiveArtifacts artifacts: 'slave.properties', fingerprint: true
                }
            }
        }
    }
}
